name: Build Docker Image

on: 
  workflow_dispatch:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner}}/strichliste
  SOURCE_BRANCH: "wamp"

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: "Westwoodlabs/strichliste-web-frontend"
          ref: ${{ env.SOURCE_BRANCH }}

      - name: Use Node.js
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: yarn install

      - name: Build Frontend
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          CI=false yarn build

      - name: Display structure of files
        run: ls -R

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend
          path: build

  build-backend:
    name: Build Backend
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: "Westwoodlabs/strichliste-backend"
          ref: ${{ env.SOURCE_BRANCH }}

      - name: Build
        uses: php-actions/composer@v6
        with:
          php_version: "8.1"
          dev: no
          args: --optimize-autoloader

      - name: Display structure of files
        run: ls -R

      - name: Cleanup
        run: |
          sudo rm -rf var/cache/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend
          path: ./
    
  build-image:
    name: Build and Push Docker Image
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Backend artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend
          path: ./build/

      - name: Download Frontend artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend
          path: ./build/public

      - name: Display structure of files
        run: ls -R

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: docker_build_and_push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64

      - name: Image digests
        run: |
          echo image digest: ${{ steps.docker_build_and_push.outputs.digest }}
    
  
